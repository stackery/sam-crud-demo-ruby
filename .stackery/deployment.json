{"stack":"AWSTemplateFormatVersion: 2010-09-09\nTransform: AWS::Serverless-2016-10-31\nDescription: Stackery Serverless CRUD API Demo\nResources:\n  api:\n    Type: AWS::Serverless::Api\n    Properties:\n      Name: !Sub\n        - ${ResourceName} From Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName}\n        - ResourceName: /users\n      StageName: !Ref StackeryEnvironmentAPIGatewayStageName\n      DefinitionBody:\n        swagger: '2.0'\n        info: {}\n        paths:\n          /users:\n            get:\n              x-amazon-apigateway-integration:\n                httpMethod: POST\n                type: aws_proxy\n                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${listUsers.Arn}/invocations\n              responses: {}\n            post:\n              x-amazon-apigateway-integration:\n                httpMethod: POST\n                type: aws_proxy\n                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${createUser.Arn}/invocations\n              responses: {}\n          /users/{id}:\n            get:\n              x-amazon-apigateway-integration:\n                httpMethod: POST\n                type: aws_proxy\n                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${getUser.Arn}/invocations\n              responses: {}\n            put:\n              x-amazon-apigateway-integration:\n                httpMethod: POST\n                type: aws_proxy\n                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${updateUser.Arn}/invocations\n              responses: {}\n            delete:\n              x-amazon-apigateway-integration:\n                httpMethod: POST\n                type: aws_proxy\n                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${deleteUser.Arn}/invocations\n              responses: {}\n      EndpointConfiguration: REGIONAL\n    Metadata:\n      StackeryName: /users\n  usersTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      AttributeDefinitions:\n        - AttributeName: id\n          AttributeType: S\n      KeySchema:\n        - AttributeName: id\n          KeyType: HASH\n      ProvisionedThroughput:\n        ReadCapacityUnits: 5\n        WriteCapacityUnits: 5\n      StreamSpecification:\n        StreamViewType: NEW_AND_OLD_IMAGES\n      TableName: !Sub ${AWS::StackName}-usersTable\n    Metadata:\n      StackeryName: Users\n  listUsers:\n    Type: AWS::Serverless::Function\n    Properties:\n      FunctionName: !Sub ${AWS::StackName}-listUsers\n      Description: !Sub\n        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}\n        - ResourceName: listUsers\n      CodeUri: src/listUsers\n      Handler: function.handler\n      Runtime: ruby2.5\n      MemorySize: 3008\n      Timeout: 30\n      Tracing: Active\n      Policies:\n        - AWSXrayWriteOnlyAccess\n        - DynamoDBCrudPolicy:\n            TableName: !Ref usersTable\n      Events:\n        apiGETusers:\n          Type: Api\n          Properties:\n            Path: /users\n            Method: GET\n            RestApiId: !Ref api\n      Environment:\n        Variables:\n          TABLE_NAME: !Ref usersTable\n          TABLE_ARN: !GetAtt usersTable.Arn\n  deleteUser:\n    Type: AWS::Serverless::Function\n    Properties:\n      FunctionName: !Sub ${AWS::StackName}-deleteUser\n      Description: !Sub\n        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}\n        - ResourceName: deleteUser\n      CodeUri: src/deleteUser\n      Handler: function.handler\n      Runtime: ruby2.5\n      MemorySize: 3008\n      Timeout: 30\n      Tracing: Active\n      Policies:\n        - AWSXrayWriteOnlyAccess\n        - DynamoDBCrudPolicy:\n            TableName: !Ref usersTable\n      Events:\n        apiDELETEusersid:\n          Type: Api\n          Properties:\n            Path: /users/{id}\n            Method: DELETE\n            RestApiId: !Ref api\n      Environment:\n        Variables:\n          TABLE_NAME: !Ref usersTable\n          TABLE_ARN: !GetAtt usersTable.Arn\n  createUser:\n    Type: AWS::Serverless::Function\n    Properties:\n      FunctionName: !Sub ${AWS::StackName}-createUser\n      Description: !Sub\n        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}\n        - ResourceName: createUser\n      CodeUri: src/createUser\n      Handler: function.handler\n      Runtime: ruby2.5\n      MemorySize: 3008\n      Timeout: 30\n      Tracing: Active\n      Policies:\n        - AWSXrayWriteOnlyAccess\n        - DynamoDBCrudPolicy:\n            TableName: !Ref usersTable\n      Events:\n        apiPOSTusers:\n          Type: Api\n          Properties:\n            Path: /users\n            Method: POST\n            RestApiId: !Ref api\n      Environment:\n        Variables:\n          TABLE_NAME: !Ref usersTable\n          TABLE_ARN: !GetAtt usersTable.Arn\n  updateUser:\n    Type: AWS::Serverless::Function\n    Properties:\n      FunctionName: !Sub ${AWS::StackName}-updateUser\n      Description: !Sub\n        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}\n        - ResourceName: updateUser\n      CodeUri: src/updateUser\n      Handler: function.handler\n      Runtime: ruby2.5\n      MemorySize: 3008\n      Timeout: 30\n      Tracing: Active\n      Policies:\n        - AWSXrayWriteOnlyAccess\n        - DynamoDBCrudPolicy:\n            TableName: !Ref usersTable\n      Events:\n        apiPUTusersid:\n          Type: Api\n          Properties:\n            Path: /users/{id}\n            Method: PUT\n            RestApiId: !Ref api\n      Environment:\n        Variables:\n          TABLE_NAME: !Ref usersTable\n          TABLE_ARN: !GetAtt usersTable.Arn\n  getUser:\n    Type: AWS::Serverless::Function\n    Properties:\n      FunctionName: !Sub ${AWS::StackName}-getUser\n      Description: !Sub\n        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}\n        - ResourceName: getUser\n      CodeUri: src/getUser\n      Handler: function.handler\n      Runtime: ruby2.5\n      MemorySize: 3008\n      Timeout: 30\n      Tracing: Active\n      Policies:\n        - AWSXrayWriteOnlyAccess\n        - DynamoDBCrudPolicy:\n            TableName: !Ref usersTable\n      Events:\n        apiGETusersid:\n          Type: Api\n          Properties:\n            Path: /users/{id}\n            Method: GET\n            RestApiId: !Ref api\n      Environment:\n        Variables:\n          TABLE_NAME: !Ref usersTable\n          TABLE_ARN: !GetAtt usersTable.Arn\nParameters:\n  StackeryStackTagName:\n    Type: String\n    Description: Stack Name (injected by Stackery at deployment time)\n  StackeryEnvironmentTagName:\n    Type: String\n    Description: Environment Name (injected by Stackery at deployment time)\n  StackeryEnvironmentAPIGatewayStageName:\n    Type: String\n    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)\n  StackTagName:\n    Type: String\n    Description: Stack Name (injected by Stackery at deployment time)\n  EnvironmentTagName:\n    Type: String\n    Description: Environment Name (injected by Stackery at deployment time)\n"}
